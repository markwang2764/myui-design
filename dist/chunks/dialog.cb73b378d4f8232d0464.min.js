(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{o2F7:function(e,t){},uRPF:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l,a=n("q1tI"),o=(l=a)&&l.__esModule?l:{default:l};n("o2F7");var r=n("8C91");const i=r.DyDialog.DyConfirm,s=r.DyDialog.DyAlert,c=r.DyDialog.DyModal;t.default=class extends o.default.Component{constructor(...e){var t;return t=super(...e),this.state={visible:!1},this.Copy=(e=>{var t=document.querySelector(e).innerText,n=document.createElement("textarea");n.value=t,document.body.appendChild(n),n.select(),document.execCommand("Copy"),alert("复制成功")}),t}componentDidMount(){}render(){const e=this.state.visible;return o.default.createElement(o.default.Fragment,null,o.default.createElement("div",{style:{fontSize:"16px",padding:"30px",marginBottom:"10px",background:"#fff"}},o.default.createElement("div",{style:{marginBottom:"10px"}},"DyDialog用法："),o.default.createElement(r.DyButton,{onClick:()=>{this.setState({visible:!0})}},"点击弹窗"),o.default.createElement(r.DyDialog,{title:"标题",visible:e,onClose:()=>{this.setState({visible:!1})},footer:o.default.createElement(a.Fragment,null,o.default.createElement(r.DyButton,{type:"warning",style:{marginLeft:"10px"},onClick:()=>{this.setState({visible:!1})}},"确认"),o.default.createElement(r.DyButton,{onClick:()=>{this.setState({visible:!1})}},"取消"))},o.default.createElement("div",null,"im dialog")),o.default.createElement("div",{className:"codePlace"},o.default.createElement("pre",{className:"pre1",dangerouslySetInnerHTML:{__html:toShow('\n    import React from \'react\';\n    import ReactDOM from \'react-dom\';\n     import { DyDialog, DyButton } from "@dy.design";\n\n\n    class Dialog extends React.PureComponent {\n\n        state = {\n            visible: false,\n          };\n\n\n        render(){\n        return    \n          <Fragment>\n            <DyButton\n                onClick={() => {\n                  this.setState({ visible: true });\n                }}\n              >\n              点击弹窗\n            </DyButton>\n            <DyDialog\n              title="标题"\n              visible={visible}\n              onClose={() => {\n                this.setState({ visible: false });\n              }}\n              footer={\n                <Fragment>\n                  <DyButton\n                    type="warning"\n                    style={{\n                      marginLeft: "10px"\n                    }}\n                    onClick={() => {\n                      this.setState({ visible: false });\n                    }}\n                  >\n                    确认\n                  </DyButton>\n                  <DyButton\n                    onClick={() => {\n                      this.setState({ visible: false });\n                    }}\n                  >\n                    取消\n                  </DyButton>\n                </Fragment>\n                }\n              >\n              <div>im dialog</div>\n            </DyDialog>\n          </Fragment>\n\n\n          modal({\n            title: "新建流程模板",\n            content: (\n              <CreateNewProcessTemplate\n                getValue={value => {\n                  this.setState({ newProcessArgs: value });\n                }}\n              />\n            ),\n            onOk: () => {\n              const { processType, processTemplateName, processTemplateDesc } = this.state.newProcessArgs;\n\n              if (!processType) {\n                error("模板类型不能为空");\n                return;\n              }\n              if (!processTemplateName) {\n                error("模板名字不能为空");\n                return;\n              }\n              if (!processTemplateDesc) {\n                error("模板描述不能为空");\n                return;\n              }\n              createProcesstemplates({ processType, processTemplateName, processTemplateDesc }).then(res => {\n                this.setState({ processDefaultSelectKey: res.uid });\n                this._getProcesstemplatesByUid(res.uid);\n\n                message("新建成功");\n                this.getTemplates();\n              });\n            },\n            onCancel: () => {},\n          });\n        }\n    }\n\n    ReactDOM.render(<Dialog />, DomNode);\n            ')}}),o.default.createElement("button",{onClick:()=>this.Copy(".pre1")},"复制"))),o.default.createElement("div",{style:{fontSize:"16px",padding:"30px",marginBottom:"10px",background:"#fff"}},o.default.createElement("div",{style:{marginBottom:"10px"}},"DyAlert|DyConfirm|DyModal用法："),o.default.createElement(r.DyButton,{onClick:()=>{s({title:"alert",content:o.default.createElement("div",null,"im alert")})}},"DyAlert"),o.default.createElement(r.DyButton,{onClick:()=>{i({title:"confirm",content:o.default.createElement("div",null,"im confirm"),onOk:()=>{alert("ok")},onCancel:()=>{alert("cancel")}})}},"DyConfirm"),o.default.createElement(r.DyButton,{onClick:()=>{c({title:"modal",content:o.default.createElement("div",null,"im Modal"),onOk:()=>{alert("ok")},onCancel:()=>{alert("cancel")}})}},"DyModal"),o.default.createElement("div",{className:"codePlace"},o.default.createElement("pre",{className:"pre2",dangerouslySetInnerHTML:{__html:toShow('\n    import React from \'react\';\n    import ReactDOM from \'react-dom\';\n\n\n    class DyAlert extends React.PureComponent {\n\n        render(){\n            return    \n            <Fragment>\n            \n              <DyButton\n                onClick={() => {\n                  DyAlert({\n                    title: "alert",\n                    content: <div>im alert</div>\n                  });\n                }}\n              >\n                DyAlert\n              </DyButton>\n\n              <DyButton\n                onClick={() => {\n                  DyConfirm({\n                    title: "confirm",\n                    content: <div>im confirm</div>,\n                    onOk: () => {\n                      alert("ok");\n                    },\n                    onCancel: () => {\n                      alert("cancel");\n                    }\n                  });\n                }}\n              >\n                DyConfirm\n              </DyButton>\n\n              <DyButton\n                onClick={() => {\n                  DyModal({\n                    title: "modal",\n                    content: <div>im Modal</div>,\n                    onOk: () => {\n                      alert("ok");\n                    },\n                    onCancel: () => {\n                      alert("cancel");\n                    }\n                  });\n                }}\n              >\n                DyModal\n              </DyButton>\n\n            </Fragment>\n      \n            ')}}),o.default.createElement("button",{onClick:()=>this.Copy(".pre2")},"复制"))),o.default.createElement("div",{style:{margin:"10px"}},"参数说明："),o.default.createElement("div",{className:"desc"},"复杂的弹窗表单等 使用Dialog 简单的弹窗提示及数据交互使用alert confirm modal 已经在全局挂在这个三个方法"),o.default.createElement("div",{className:"desc"}," window.alert = DyAlert; "),o.default.createElement("div",{className:"desc"}," window.confirm = DyConfirm; "),o.default.createElement("div",{className:"desc"}," window.modal = DyModal; "))}}}}]);