{"version":3,"sources":["webpack:///./src/routes/Dialog/index.js"],"names":["_react","__webpack_require__","_dy","DyConfirm","DyDialog","DyAlert","DyModal","React","Component","[object Object]","args","_temp","super","this","state","visible","Copy","className","Url2","document","querySelector","innerText","oInput","createElement","value","body","appendChild","select","execCommand","alert","componentDidMount","render","_react2","default","Fragment","style","fontSize","padding","marginBottom","background","DyButton","onClick","setState","title","onClose","footer","type","marginLeft","dangerouslySetInnerHTML","__html","toShow","content","onOk","onCancel","margin"],"mappings":"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","file":"chunks/dialog.cb73b378d4f8232d0464.min.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./index.less\";\nimport { DyDialog, DyButton } from \"@dy.design\";\nconst { DyConfirm, DyAlert, DyModal } = DyDialog;\n\nexport default class Dialog extends React.Component {\n  state = {\n    visible: false\n  };\n  componentDidMount() {}\n\n  Copy = className => {\n    var Url2 = document.querySelector(className).innerText;\n\n    var oInput = document.createElement(\"textarea\");\n    oInput.value = Url2;\n    document.body.appendChild(oInput);\n    oInput.select(); // 选择对象\n    document.execCommand(\"Copy\"); // 执行浏览器复制命令\n    alert(\"复制成功\");\n  };\n\n  render() {\n    const { visible } = this.state;\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            fontSize: \"16px\",\n            padding: \"30px\",\n            marginBottom: \"10px\",\n            background: \"#fff\"\n          }}\n        >\n          <div\n            style={{\n              marginBottom: \"10px\"\n            }}\n          >\n            DyDialog用法：\n          </div>\n          <DyButton\n            onClick={() => {\n              this.setState({ visible: true });\n            }}\n          >\n            点击弹窗\n          </DyButton>\n          <DyDialog\n            title=\"标题\"\n            visible={visible}\n            onClose={() => {\n              this.setState({ visible: false });\n            }}\n            footer={\n              <Fragment>\n                <DyButton\n                  type=\"warning\"\n                  style={{\n                    marginLeft: \"10px\"\n                  }}\n                  onClick={() => {\n                    this.setState({ visible: false });\n                  }}\n                >\n                  确认\n                </DyButton>\n                <DyButton\n                  onClick={() => {\n                    this.setState({ visible: false });\n                  }}\n                >\n                  取消\n                </DyButton>\n              </Fragment>\n            }\n          >\n            <div>im dialog</div>\n          </DyDialog>\n          <div className=\"codePlace\">\n            <pre\n              className=\"pre1\"\n              dangerouslySetInnerHTML={{\n                __html: toShow(`\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n     import { DyDialog, DyButton } from \"@dy.design\";\n\n\n    class Dialog extends React.PureComponent {\n\n        state = {\n            visible: false,\n          };\n\n\n        render(){\n        return    \n          <Fragment>\n            <DyButton\n                onClick={() => {\n                  this.setState({ visible: true });\n                }}\n              >\n              点击弹窗\n            </DyButton>\n            <DyDialog\n              title=\"标题\"\n              visible={visible}\n              onClose={() => {\n                this.setState({ visible: false });\n              }}\n              footer={\n                <Fragment>\n                  <DyButton\n                    type=\"warning\"\n                    style={{\n                      marginLeft: \"10px\"\n                    }}\n                    onClick={() => {\n                      this.setState({ visible: false });\n                    }}\n                  >\n                    确认\n                  </DyButton>\n                  <DyButton\n                    onClick={() => {\n                      this.setState({ visible: false });\n                    }}\n                  >\n                    取消\n                  </DyButton>\n                </Fragment>\n                }\n              >\n              <div>im dialog</div>\n            </DyDialog>\n          </Fragment>\n\n\n          modal({\n            title: \"新建流程模板\",\n            content: (\n              <CreateNewProcessTemplate\n                getValue={value => {\n                  this.setState({ newProcessArgs: value });\n                }}\n              />\n            ),\n            onOk: () => {\n              const { processType, processTemplateName, processTemplateDesc } = this.state.newProcessArgs;\n\n              if (!processType) {\n                error(\"模板类型不能为空\");\n                return;\n              }\n              if (!processTemplateName) {\n                error(\"模板名字不能为空\");\n                return;\n              }\n              if (!processTemplateDesc) {\n                error(\"模板描述不能为空\");\n                return;\n              }\n              createProcesstemplates({ processType, processTemplateName, processTemplateDesc }).then(res => {\n                this.setState({ processDefaultSelectKey: res.uid });\n                this._getProcesstemplatesByUid(res.uid);\n\n                message(\"新建成功\");\n                this.getTemplates();\n              });\n            },\n            onCancel: () => {},\n          });\n        }\n    }\n\n    ReactDOM.render(<Dialog />, DomNode);\n            `)\n              }}\n            />\n            <button onClick={() => this.Copy(\".pre1\")}>复制</button>\n          </div>\n        </div>\n\n        <div\n          style={{\n            fontSize: \"16px\",\n            padding: \"30px\",\n            marginBottom: \"10px\",\n            background: \"#fff\"\n          }}\n        >\n          <div\n            style={{\n              marginBottom: \"10px\"\n            }}\n          >\n            DyAlert|DyConfirm|DyModal用法：\n          </div>\n          <DyButton\n            onClick={() => {\n              DyAlert({\n                title: \"alert\",\n                content: <div>im alert</div>\n              });\n            }}\n          >\n            DyAlert\n          </DyButton>\n          <DyButton\n            onClick={() => {\n              DyConfirm({\n                title: \"confirm\",\n                content: <div>im confirm</div>,\n                onOk: () => {\n                  alert(\"ok\");\n                },\n                onCancel: () => {\n                  alert(\"cancel\");\n                }\n              });\n            }}\n          >\n            DyConfirm\n          </DyButton>\n          <DyButton\n            onClick={() => {\n              DyModal({\n                title: \"modal\",\n                content: <div>im Modal</div>,\n                onOk: () => {\n                  alert(\"ok\");\n                },\n                onCancel: () => {\n                  alert(\"cancel\");\n                }\n              });\n            }}\n          >\n            DyModal\n          </DyButton>\n\n          <div className=\"codePlace\">\n            <pre\n              className=\"pre2\"\n              dangerouslySetInnerHTML={{\n                __html: toShow(`\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n\n\n    class DyAlert extends React.PureComponent {\n\n        render(){\n            return    \n            <Fragment>\n            \n              <DyButton\n                onClick={() => {\n                  DyAlert({\n                    title: \"alert\",\n                    content: <div>im alert</div>\n                  });\n                }}\n              >\n                DyAlert\n              </DyButton>\n\n              <DyButton\n                onClick={() => {\n                  DyConfirm({\n                    title: \"confirm\",\n                    content: <div>im confirm</div>,\n                    onOk: () => {\n                      alert(\"ok\");\n                    },\n                    onCancel: () => {\n                      alert(\"cancel\");\n                    }\n                  });\n                }}\n              >\n                DyConfirm\n              </DyButton>\n\n              <DyButton\n                onClick={() => {\n                  DyModal({\n                    title: \"modal\",\n                    content: <div>im Modal</div>,\n                    onOk: () => {\n                      alert(\"ok\");\n                    },\n                    onCancel: () => {\n                      alert(\"cancel\");\n                    }\n                  });\n                }}\n              >\n                DyModal\n              </DyButton>\n\n            </Fragment>\n      \n            `)\n              }}\n            />\n            <button onClick={() => this.Copy(\".pre2\")}>复制</button>\n          </div>\n        </div>\n\n        <div style={{ margin: \"10px\" }}>参数说明：</div>\n        <div className=\"desc\">\n          复杂的弹窗表单等 使用Dialog 简单的弹窗提示及数据交互使用alert confirm\n          modal 已经在全局挂在这个三个方法\n        </div>\n        <div className=\"desc\"> window.alert = DyAlert; </div>\n        <div className=\"desc\"> window.confirm = DyConfirm; </div>\n        <div className=\"desc\"> window.modal = DyModal; </div>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}